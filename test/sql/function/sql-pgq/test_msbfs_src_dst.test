# name: test/sql/function/sql-pgq/test_msbfs_src_dst.test
# description: Test msbfs threads 
# group: [sql-pgq]

# statement ok
# PRAGMA threads=2;


statement ok
CREATE TABLE Customer(cid bigint not null, name string);

statement ok
CREATE TABLE Transfers(tid bigint, from_id bigint, to_id bigint, amount bigint);

statement ok
INSERT INTO Customer VALUES (173, 'A'), (478, 'B'), (297, 'C'), (869, 'D');

statement ok
INSERT INTO Transfers VALUES
  (955, 173, 478, 150),
  (769, 173, 297, 50),
  (607, 478, 297, 250),
  (184, 297, 869, 350);

statement ok
CREATE TABLE src_dest(id int, v_size bigint, src bigint, dst bigint);

statement ok
INSERT INTO src_dest VALUES(0, 4, 0, 1), (0, 4, 0, 2), (0, 4, 0, 3),(0, 4, 1, 0), (0, 4, 1, 2), (0, 4, 1, 3), (0, 4, 2, 0),
(0, 4, 2, 1), (0, 4, 2, 3), (0, 4, 3, 0), (0, 4, 3, 1), (0, 4, 3, 2);


#CSR needs to created first before calling reachability. 
statement ok
SELECT CREATE_CSR_EDGE(0, (SELECT count(c.cid) as vcount FROM Customer c), 
CAST ((SELECT sum(CREATE_CSR_VERTEX(0, (SELECT count(c.cid) as vcount FROM Customer c), 
sub.dense_id , sub.cnt )) AS numEdges
FROM (
    SELECT c.rowid as dense_id, count(t.from_id) as cnt
    FROM Customer c  
    LEFT JOIN  Transfers t ON t.from_id = c.cid
    GROUP BY c.rowid
) sub) AS BIGINT), 
src.rowid, dst.rowid )
FROM 
  Transfers t 
  JOIN Customer src ON t.from_id = src.cid
  JOIN Customer dst ON t.to_id = dst.cid


query T
SELECT reachability(id, false, v_size, src, dst) FROM src_dest;
----
1
1
1
0
1
1
0
0
1
0
0
0

#Csr destroyed by previous run of reachability. Needs to be recreated before re-running reachability.
statement error
SELECT max(reachability(id, v_size, src, dst)) FROM src_dest ;


#works again as it is a full query where CSR is created first
query II rowsort
WITH cte1 AS (
SELECT min(CREATE_CSR_EDGE(0, (SELECT count(c.cid) as vcount FROM Customer c), 
CAST ((SELECT sum(CREATE_CSR_VERTEX(0, (SELECT count(c.cid) as vcount FROM Customer c), 
sub.dense_id , sub.cnt )) as numEdges 
FROM (
    SELECT c.rowid as dense_id, count(t.from_id) as cnt
    FROM Customer c  
    LEFT JOIN  Transfers t ON t.from_id = c.cid
    GROUP BY c.rowid
) sub) AS BIGINT), 
src.rowid, dst.rowid ) ) as temp, (SELECT count(c.cid) FROM Customer c) as vcount
FROM 
  Transfers t 
  JOIN Customer src ON t.from_id = src.cid
  JOIN Customer dst ON t.to_id = dst.cid
)
SELECT src.cid AS c1id, dst.cid AS c2id
FROM cte1, Customer src, Customer dst 
WHERE  
( reachability(0, true, cte1.vcount, src.rowid, dst.rowid) = cte1.temp)
----
173	173			
173	297
173	478
173	869
297	297
297	869
478	297
478	478
478	869
869	869









