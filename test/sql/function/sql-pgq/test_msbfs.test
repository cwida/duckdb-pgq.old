# name: test/sql/function/sql-pgq/test_msbfs.test
# description: Test create csr function
# group: [sql-pgq]


statement ok
CREATE TABLE Customer(cid bigint not null, name string);

statement ok
CREATE TABLE Transfers(tid bigint, from_id bigint, to_id bigint, amount bigint);

statement ok
INSERT INTO Customer VALUES (173, 'A'), (478, 'B'), (297, 'C'), (869, 'D'), (202, 'E');

statement ok
INSERT INTO Transfers VALUES
  (955, 173, 869, 150),
  (769, 173, 297, 50),
  (607, 478, 297, 250),
  (507, 478, 869, 250),
  (111, 297, 173, 10),
  (121, 297, 478, 20),
  (131, 297, 202, 30),
  (211, 869, 173, 10),
  (321, 869, 478, 20),
  (184, 202, 297, 350);


query I
SELECT v.vcount FROM (SELECT count(c.cid) as vcount FROM Customer c) v
----
5

query I
SELECT sum(CREATE_CSR_VERTEX(0, (SELECT count(c.cid) as vcount FROM Customer c), 
sub.dense_id , sub.cnt)) AS numEdges
FROM (
    SELECT c.rowid as dense_id, count(t.from_id) as cnt
    FROM Customer c  
    LEFT JOIN  Transfers t ON t.from_id = c.cid
    GROUP BY c.rowid
) sub
----
10


query II rowsort
WITH cte1 AS (
SELECT min(CREATE_CSR_EDGE(0, (SELECT count(c.cid) as vcount FROM Customer c), 
CAST ((SELECT sum(CREATE_CSR_VERTEX(0, (SELECT count(c.cid) as vcount FROM Customer c), 
sub.dense_id , sub.cnt )) as numEdges 
FROM (
    SELECT c.rowid as dense_id, count(t.from_id) as cnt
    FROM Customer c  
    LEFT JOIN  Transfers t ON t.from_id = c.cid
    GROUP BY c.rowid
) sub) AS BIGINT), 
src.rowid, dst.rowid ) ) as temp, (SELECT count(c.cid) FROM Customer c) as vcount
FROM 
  Transfers t 
  JOIN Customer src ON t.from_id = src.cid
  JOIN Customer dst ON t.to_id = dst.cid
)
SELECT src.cid AS c1id, dst.cid AS c2id
FROM cte1, Customer src, Customer dst 
WHERE  
( reachability(0, true, cte1.vcount, src.rowid, dst.rowid) = cte1.temp)
----
173	173
173	202
173	297
173	478
173	869
202	173
202	202
202	297
202	478
202	869
297	173
297	202
297	297
297	478
297	869
478	173
478	202
478	297
478	478
478	869
869	173
869	202
869	297
869	478
869	869


statement ok
CREATE TABLE src_dest(id int, v_size bigint, src bigint, dst bigint);

statement ok
INSERT INTO src_dest VALUES(0, 5, 0, 1), (0, 5, 0, 3), (0, 5, 0, 4), (0, 5, 3, 4), (0, 5, 4, 2), (0, 5, 4, 3);


statement ok
SELECT min(CREATE_CSR_EDGE(0, (SELECT count(c.cid) as vcount FROM Customer c), 
CAST ((SELECT sum(CREATE_CSR_VERTEX(0, (SELECT count(c.cid) as vcount FROM Customer c), 
sub.dense_id , sub.cnt )) as numEdges 
FROM (
    SELECT c.rowid as dense_id, count(t.from_id) as cnt
    FROM Customer c  
    LEFT JOIN  Transfers t ON t.from_id = c.cid
    GROUP BY c.rowid
) sub) AS BIGINT), 
src.rowid, dst.rowid )) as temp
FROM 
  Transfers t 
  JOIN Customer src ON t.from_id = src.cid
  JOIN Customer dst ON t.to_id = dst.cid

query I
SELECT reachability(id, false, v_size, src, dst) FROM src_dest;
----
1
1
1
1
1
1
